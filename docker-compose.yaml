version: "3.9"

networks:
  database:
    internal: true
  api:
    internal: true
  monit:
  proxy:


services:
  mysql-locacar:
    image: mysql
    container_name: mysql-locacar
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: 'locacar'
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    networks:
      - database

  app-locacar:
    build:
      context: ./src
      dockerfile: Dockerfile
      args:
        version: 1
    image: app-locacar
    container_name: app-locacar
    restart: always
    networks:
      - api
      - database
    environment:
      - MYSQL_HOST=mysql-locacar
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=locacar
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - CHATBOT_API_KEY=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
      - API_KEY_NAME=LocaCar-Api-Key
      - API_KEY=dbf3515c-f0e3-406b-8b31-5b0db2b17f3b
    healthcheck:
      test: "curl -sS http://app-locacar/swagger"
      interval: 1s
      timeout: 30s
      retries: 60
    depends_on:
      - mysql-locacar

  proxy-locacar:
    image: nginx
    container_name: proxy-locacar
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf
    ports:
      - 80:80
    networks:
      - proxy
      - api
    depends_on:
      - app-locacar

  nginx-prometheus-exporter-locacar:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-prometheus-exporter-locacar
    restart: always
    ports:
      - 9113:9113
    command:
      - '-nginx.scrape-uri=http://proxy-locacar:80/metrics-nginx'
    networks:
      - proxy
      - monit
    depends_on:
      - proxy-locacar

  netdata-locacar:
    image: netdata/netdata
    container_name: netdata-locacar
    restart: always
    ports:
      - 19999:19999
    volumes:
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    cap_add:
      - SYS_PTRACE
    networks:
      - api
      - monit
    depends_on:
      - nginx-prometheus-exporter-locacar

  prometheus-locacar:
    image: prom/prometheus
    container_name: prometheus-locacar
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules:/etc/prometheus/alert.rules
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monit
      - api
    depends_on:
      - netdata-locacar

  alertmanager-locacar:
    image: prom/alertmanager
    container_name: alertmanager-locacar
    volumes:
      - ./alertmanager:/etc/alertmanager/:ro
    ports:
      - 9093:9093
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    networks:
      - monit
    depends_on:
      - prometheus-locacar

  grafana-locacar:
    image: grafana/grafana
    container_name: grafana-locacar
    volumes:
      - ./grafana:/var/lib/grafana
    restart: always
    ports:
      - 3000:3000
    networks:
      - monit
    depends_on:
      - alertmanager-locacar

  client-locacar:
    build:
      context: ./client/
      dockerfile: Dockerfile
    image: client-locacar
    container_name: client-locacar
    restart: unless-stopped
    networks:
      - proxy
    depends_on:
      - grafana-locacar
